<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">


     <!--配置自动扫描包,为了将Service扫描到IOC容器中-->
     <context:component-scan base-package="com.atguigu.crowd.service"/>

     <!--配置事务管理器-->
     <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="dataSourceTransactionManager">
          <property name="dataSource" ref="dataSource"/>
     </bean>

     <!--配置事务切面-->
     <aop:config>
          <!--
               第一个:*:public String
               第二个:*..:任意包,任意级别
               第三个:*ServiceImpl:以ServiceImpl结尾
               第四个:*任意方法
               第五个:..:任意参数
          -->
          <!--<aop:pointcut id="" expression="execution(public String com.atguigu.crowd.service.AdminService.saveAdmin(Admin))"/>-->
          <aop:pointcut id="txPointCut" expression="execution(* *..*ServiceImpl.*(..))"/>
          <!--将切入点表达式和事务通知关联起来-->
          <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>

     </aop:config>

     <!--配置事务通知-->
     <tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">
          <tx:attributes>
               <!--查询的方法:配置只读属性,让数据库知道这是一个查询操作,能够进行一定优化-->
               <tx:method name="get*" read-only="true"/>
               <tx:method name="find*" read-only="true"/>
               <tx:method name="query*" read-only="true"/>
               <tx:method name="count*" read-only="true"/>

               <!--增删改方法:配置事务传播行为,回滚异常-->
               <!--
                    propagation属性:
                         REQUIRED:默认值,表示当前方法必须工作在事务中,如果当前线程上没有已经开启的事务,则自己开启新事务,如果已经有了,则使用这个已有的事务
                              用别人的事务可能被回滚
                         REQUIRES_NEW:表示当前方法必须工作在事务中,如果当前线程上没有已经开启的事务,则自己开启新事务,如果已经有了,也在自己开启的事务中运行
               -->
               <!--
                    rollback-for属性:配置事务方法针对什么样的异常回滚
                         默认:运行时异常回滚
                         建议:运行时异常和编译时异常都回滚
               -->
               <tx:method name="save*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
               <tx:method name="update*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
               <tx:method name="remove*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
               <tx:method name="batch*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>

          </tx:attributes>

     </tx:advice>
</beans>